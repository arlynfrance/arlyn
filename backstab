-- BackstabHub vFinal
-- Single LocalScript: GUI (draggable, outline color), smooth slider, RightShift toggle, Backstab & ESP toggles
-- ESP loaded from Exunys GitHub and uses ESPLibrary:Load()/Unload() per their instructions.

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local lp = Players.LocalPlayer

-- ===== Config / State =====
local guiVisible = true
local backstabEnabled = false
local espEnabled = false
local cooldown = false
local lastTarget = nil
local range = 4                -- 1..10 (mapped from slider)
local mode = "Behind"          -- "Behind" or "Around"
local daggerRemote = nil
pcall(function()
    local rs = game:GetService("ReplicatedStorage")
    if rs:FindFirstChild("Modules") and rs.Modules:FindFirstChild("Network") then
        daggerRemote = rs.Modules.Network:FindFirstChildWhichIsA("RemoteEvent") or rs.Modules.Network:FindFirstChild("RemoteEvent")
    end
end)

local killerNames = { "Jason", "c00lkidd", "JohnDoe", "1x1x1x1", "Noli" }
local killersFolder = workspace:FindFirstChild("Players") and workspace.Players:FindFirstChild("Killers") or workspace:FindFirstChild("Killers")

-- Outline color
local OUTLINE_COLOR = Color3.fromRGB(60, 60, 60)
local BG_COLOR = Color3.fromRGB(18, 18, 18)
local BTN_OFF = Color3.fromRGB(35, 35, 35)
local ACCENT = OUTLINE_COLOR
local TEXT_COLOR = Color3.fromRGB(235, 235, 235)

-- ===== ESP Drawing Registration Helpers =====
local espDrawings = {}
local originalDrawingNew = nil
local drawingAvailable = (type(Drawing) == "table" and type(Drawing.new) == "function")

local function registerDrawing(obj)
    if not obj then return end
    table.insert(espDrawings, obj)
    return obj
end

local function cleanupDrawings()
    for i = 1, #espDrawings do
        local obj = espDrawings[i]
        if obj then
            pcall(function()
                if type(obj.Remove) == "function" then
                    obj:Remove()
                elseif obj.Visible ~= nil then
                    obj.Visible = false
                end
            end)
        end
    end
    table.clear(espDrawings)
end

local function wrapDrawingNew()
    if not drawingAvailable then return end
    if originalDrawingNew then return end
    originalDrawingNew = Drawing.new
    Drawing.new = function(...)
        local ok, obj = pcall(originalDrawingNew, ...)
        if not ok then return obj end
        pcall(function() registerDrawing(obj) end)
        return obj
    end
end

local function unwrapDrawingNew()
    if not originalDrawingNew then return end
    pcall(function() Drawing.new = originalDrawingNew end)
    originalDrawingNew = nil
end

-- ===== GUI Creation =====
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BackstabHub_Final"
screenGui.ResetOnSpawn = false

local parentSuccess = false
pcall(function()
    if game:GetService("CoreGui") then
        screenGui.Parent = game:GetService("CoreGui")
        parentSuccess = true
    end
end)
if not parentSuccess then
    screenGui.Parent = lp:WaitForChild("PlayerGui")
end

local GUI_W, GUI_H = 560, 260

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, GUI_W, 0, GUI_H)
mainFrame.Position = UDim2.new(0.35, 0, 0.25, 0)
mainFrame.BackgroundColor3 = BG_COLOR
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local uiCorner = Instance.new("UICorner", mainFrame)
uiCorner.CornerRadius = UDim.new(0, 10)

local uiStroke = Instance.new("UIStroke", mainFrame)
uiStroke.Thickness = 2
uiStroke.Color = OUTLINE_COLOR

-- Title bar
local titleBar = Instance.new("Frame", mainFrame)
titleBar.Size = UDim2.new(1, 0, 0, 36)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
titleBar.BorderSizePixel = 0

local titleText = Instance.new("TextLabel", titleBar)
titleText.Size = UDim2.new(1, -12, 1, 0)
titleText.Position = UDim2.new(0, 10, 0, 0)
titleText.BackgroundTransparency = 1
titleText.Text = "MOCKS' BACKSTAB HUB V3"
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.Font = Enum.Font.Code
titleText.TextSize = 18
titleText.TextColor3 = TEXT_COLOR

-- Dragging
do
    local dragging, dragInput, dragStart, startPos
    local function update(input)
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then update(input) end
    end)
end

local leftFrame = Instance.new("Frame", mainFrame)
leftFrame.Size = UDim2.new(0.48, -8, 1, -48)
leftFrame.Position = UDim2.new(0, 8, 0, 44)
leftFrame.BackgroundTransparency = 1

local rightFrame = Instance.new("Frame", mainFrame)
rightFrame.Size = UDim2.new(0.48, -8, 1, -48)
rightFrame.Position = UDim2.new(0.52, 8, 0, 44)
rightFrame.BackgroundTransparency = 1

-- Styled button helper
local function createStyledButton(parent, posY, text, width)
    width = width or 240
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, width, 0, 40)
    btn.Position = UDim2.new(0, 10, 0, posY)
    btn.BackgroundColor3 = BTN_OFF
    btn.TextColor3 = TEXT_COLOR
    btn.Font = Enum.Font.Code
    btn.TextSize = 16
    btn.Text = text
    btn.AnchorPoint = Vector2.new(0, 0)
    btn.Parent = parent
    local cor = Instance.new("UICorner", btn); cor.CornerRadius = UDim.new(0, 8)
    local stroke = Instance.new("UIStroke", btn); stroke.Color = OUTLINE_COLOR; stroke.Thickness = 1
    return btn
end

-- LEFT: Backstab controls
local backstabBtn = createStyledButton(leftFrame, 0, "Backstab: OFF", 240)
local rangeLabel = Instance.new("TextLabel", leftFrame)
rangeLabel.Size = UDim2.new(0, 240, 0, 20)
rangeLabel.Position = UDim2.new(0, 10, 0, 52)
rangeLabel.BackgroundTransparency = 1
rangeLabel.TextColor3 = TEXT_COLOR
rangeLabel.Font = Enum.Font.Code
rangeLabel.TextSize = 14
rangeLabel.Text = ("Range: %s"):format(tostring(range))

-- Slider
local sliderBack = Instance.new("Frame", leftFrame)
sliderBack.Size = UDim2.new(0, 240, 0, 14)
sliderBack.Position = UDim2.new(0, 10, 0, 74)
sliderBack.BackgroundColor3 = BTN_OFF
sliderBack.BorderSizePixel = 0
local sliderCorner = Instance.new("UICorner", sliderBack); sliderCorner.CornerRadius = UDim.new(0, 6)
local sliderStroke = Instance.new("UIStroke", sliderBack); sliderStroke.Color = OUTLINE_COLOR; sliderStroke.Thickness = 1

local sliderFill = Instance.new("Frame", sliderBack)
sliderFill.Size = UDim2.new((range - 1) / 9, 0, 1, 0)
sliderFill.BackgroundColor3 = ACCENT
local fillCorner = Instance.new("UICorner", sliderFill); fillCorner.CornerRadius = UDim.new(0, 6)

local knob = Instance.new("ImageButton", sliderBack)
knob.Size = UDim2.new(0, 20, 0, 20)
knob.AnchorPoint = Vector2.new(0.5, 0.5)
knob.Position = UDim2.new((range - 1) / 9, 0, 0.5, 0)
knob.BackgroundColor3 = ACCENT
knob.AutoButtonColor = false
local knobCorner = Instance.new("UICorner", knob); knobCorner.CornerRadius = UDim.new(0, 10)
local knobStroke = Instance.new("UIStroke", knob); knobStroke.Color = OUTLINE_COLOR; knobStroke.Thickness = 1

-- Removed valueDisplay here

-- Mode button
local modeBtn = createStyledButton(leftFrame, 128, "Mode: " .. mode, 240)

-- RIGHT: ESP controls (moved position)
local espBtn = createStyledButton(rightFrame, 40, "ESP: OFF", 260)
local espInfo = Instance.new("TextLabel", rightFrame)
espInfo.Size = UDim2.new(0, 260, 0, 20)
espInfo.Position = UDim2.new(0, 10, 0, 92)
espInfo.BackgroundTransparency = 1
espInfo.TextColor3 = TEXT_COLOR
espInfo.Font = Enum.Font.Code
espInfo.TextSize = 13
espInfo.Text = ""

-- Rest of code: unchanged slider logic, button logic, ESP loader, backstab loop...

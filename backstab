local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local lp = Players.LocalPlayer

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BackstabToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = lp:WaitForChild("PlayerGui")

-- Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 150, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 20
toggleButton.Text = "Backstab: OFF"
toggleButton.Parent = screenGui

-- Rounded corners for toggle
local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 5)
toggleCorner.Parent = toggleButton

-- Range Label
local rangeLabel = Instance.new("TextLabel")
rangeLabel.Size = UDim2.new(0, 150, 0, 20)
rangeLabel.Position = UDim2.new(0, 10, 0, 55)
rangeLabel.BackgroundTransparency = 1
rangeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeLabel.Font = Enum.Font.SourceSans
rangeLabel.TextSize = 16
rangeLabel.Text = "Range:"
rangeLabel.Parent = screenGui

-- TextBox for Range Input
local rangeBox = Instance.new("TextBox")
rangeBox.Size = UDim2.new(0, 150, 0, 25)
rangeBox.Position = UDim2.new(0, 10, 0, 75)
rangeBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
rangeBox.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeBox.Font = Enum.Font.SourceSans
rangeBox.TextSize = 16
rangeBox.PlaceholderText = "Enter range (1 - 10)"
rangeBox.Text = "4"
rangeBox.ClearTextOnFocus = false
rangeBox.Parent = screenGui

-- Rounded corners for bottom elements
local rangeLabelCorner = Instance.new("UICorner")
rangeLabelCorner.CornerRadius = UDim.new(0, 3)
rangeLabelCorner.Parent = rangeLabel

local rangeBoxCorner = Instance.new("UICorner")
rangeBoxCorner.CornerRadius = UDim.new(0, 3)
rangeBoxCorner.Parent = rangeBox

-- Vars
local enabled = false
local cooldown = false
local lastTarget = nil
local range = 4
local daggerRemote = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")
local killerNames = { "Jason", "c00lkidd", "JohnDoe", "1x1x1x1", "Noli" }
local killersFolder = workspace:WaitForChild("Players"):WaitForChild("Killers")
local BACKSTAB_COOLDOWN = 30 -- seconds

-- GUI toggle
toggleButton.MouseButton1Click:Connect(function()
    enabled = not enabled
    toggleButton.Text = "Backstab: " .. (enabled and "ON" or "OFF")
    toggleButton.BackgroundColor3 = enabled and Color3.fromRGB(89, 44, 47) or Color3.fromRGB(30, 30, 30)
end)

-- TextBox Range Handling
rangeBox.FocusLost:Connect(function()
    local input = tonumber(rangeBox.Text)
    if input and input >= 1 and input <= 10 then
        range = input
    else
        rangeBox.Text = tostring(range)
    end
end)

-- Helper function
local function isInRange(hrp, targetHRP)
    return (hrp.Position - targetHRP.Position).Magnitude <= range
end

-- Main loop
RunService.Heartbeat:Connect(function()
    if not enabled or cooldown then return end
    local char = lp.Character
    if not (char and char:FindFirstChild("HumanoidRootPart")) then return end
    local hrp = char.HumanoidRootPart

    for _, name in ipairs(killerNames) do
        local killer = killersFolder:FindFirstChild(name)
        if killer and killer:FindFirstChild("HumanoidRootPart") then
            local kHRP = killer.HumanoidRootPart
            if isInRange(hrp, kHRP) and killer ~= lastTarget then
                cooldown = true
                lastTarget = killer

                -- Compute position 4.3 studs behind killer
                local behindCFrame = kHRP.CFrame * CFrame.new(0, 0, -4.3)

                -- Tween to position
                local tweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
                local tween = TweenService:Create(hrp, tweenInfo, {CFrame = CFrame.new(behindCFrame.Position, behindCFrame.Position + kHRP.CFrame.LookVector)})
                
                tween:Play()

                tween.Completed:Connect(function()
                    local backstabDone = false

                    -- Smooth dynamic follow while waiting 0.5s
                    local followConn
                    followConn = RunService.Heartbeat:Connect(function(dt)
                        if backstabDone then
                            followConn:Disconnect()
                            return
                        end
                        if not (char and char.Parent and kHRP and kHRP.Parent) then
                            followConn:Disconnect()
                            return
                        end
                        if not isInRange(hrp, kHRP) then
                            followConn:Disconnect()
                            lastTarget = nil
                            cooldown = false
                            return
                        end

                        local targetCFrame = kHRP.CFrame * CFrame.new(0, 0, -4.3)
                        local distance = (hrp.Position - targetCFrame.Position).Magnitude
                        local alpha = math.clamp(distance * 0.2, 0, 1) -- dynamic speed based on distance

                        hrp.CFrame = hrp.CFrame:Lerp(
                            CFrame.new(targetCFrame.Position, kHRP.Position + kHRP.CFrame.LookVector),
                            alpha
                        )
                    end)

                    -- Fire dagger after 0.5s and start 30s cooldown
                    task.delay(0.5, function()
                        daggerRemote:FireServer("UseActorAbility", "Dagger")
                        backstabDone = true
                        if followConn then followConn:Disconnect() end
                        lastTarget = nil
                        -- Keep cooldown active for 30 seconds
                        task.delay(BACKSTAB_COOLDOWN, function()
                            cooldown = false
                        end)
                    end)
                end)

                break
            end
        end
    end
end)

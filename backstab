local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local lp = Players.LocalPlayer

-- Vars
local enabled = false
local cooldown = false
local lastTarget = nil
local range = 4
local tweenSpeed = 1.35 -- studs/sec
local killerNames = { "Jason", "c00lkidd", "JohnDoe", "1x1x1x1", "Noli" }
local killersFolder = workspace:WaitForChild("Players"):WaitForChild("Killers")
local daggerRemote = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BackstabToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = lp:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 180, 0, 150)
mainFrame.Position = UDim2.new(0, 10, 0, 10)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 0, 40) -- Base purple
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

-- Gradient background
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 0, 40)),   -- top
	ColorSequenceKeypoint.new(1, Color3.fromRGB(85, 20, 85))   -- bottom
})
gradient.Rotation = 90 -- vertical
gradient.Parent = mainFrame

-- Title
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -30, 0, 25)
titleLabel.Position = UDim2.new(0, 5, 0, 5)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Mocks' Backstab Script"
titleLabel.TextColor3 = Color3.fromRGB(180, 100, 200)
titleLabel.Font = Enum.Font.Code
titleLabel.TextSize = 16
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = mainFrame

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 20, 0, 20)
minimizeButton.Position = UDim2.new(1, -25, 0, 5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(60, 0, 60)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(180, 100, 200)
minimizeButton.Font = Enum.Font.Code
minimizeButton.TextSize = 14
minimizeButton.Parent = mainFrame

-- Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 160, 0, 30)
toggleButton.Position = UDim2.new(0, 10, 0, 35)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 0, 50)
toggleButton.TextColor3 = Color3.fromRGB(180, 100, 200)
toggleButton.Font = Enum.Font.Code
toggleButton.TextSize = 16
toggleButton.Text = "Backstab: OFF"
toggleButton.Parent = mainFrame

-- Range Label
local rangeLabel = Instance.new("TextLabel")
rangeLabel.Size = UDim2.new(0, 160, 0, 20)
rangeLabel.Position = UDim2.new(0, 10, 0, 70)
rangeLabel.BackgroundTransparency = 1
rangeLabel.TextColor3 = Color3.fromRGB(180, 100, 200)
rangeLabel.Font = Enum.Font.Code
rangeLabel.TextSize = 14
rangeLabel.Text = "Range: " .. range
rangeLabel.Parent = mainFrame

-- Range Slider
local sliderFrame = Instance.new("Frame")
sliderFrame.Size = UDim2.new(0, 160, 0, 10)
sliderFrame.Position = UDim2.new(0, 10, 0, 95)
sliderFrame.BackgroundColor3 = Color3.fromRGB(70, 0, 70)
sliderFrame.Parent = mainFrame

local sliderButton = Instance.new("TextButton")
sliderButton.Size = UDim2.new(0, 10, 0, 20)
sliderButton.Position = UDim2.new(0, (range - 1) * (150 / 9), 0, -5)
sliderButton.BackgroundColor3 = Color3.fromRGB(120, 0, 120)
sliderButton.Text = ""
sliderButton.Parent = sliderFrame

-- Tag
local tagLabel = Instance.new("TextLabel")
tagLabel.Size = UDim2.new(1, 0, 0, 15)
tagLabel.Position = UDim2.new(0, 0, 1, -15)
tagLabel.BackgroundTransparency = 1
tagLabel.TextColor3 = Color3.fromRGB(180, 100, 200)
tagLabel.Font = Enum.Font.Code
tagLabel.TextSize = 12
tagLabel.Text = "@mocksss"
tagLabel.TextXAlignment = Enum.TextXAlignment.Center
tagLabel.Parent = mainFrame

-- Minimize functionality
local minimized = false
local originalSize = mainFrame.Size
local originalChildren = {}
for _, child in ipairs(mainFrame:GetChildren()) do
	if child ~= minimizeButton and child ~= titleLabel then
		table.insert(originalChildren, child)
	end
end

minimizeButton.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		for _, child in ipairs(originalChildren) do
			child.Visible = false
		end
		mainFrame.Size = UDim2.new(0, 180, 0, 30)
		minimizeButton.Text = "+"
	else
		for _, child in ipairs(originalChildren) do
			child.Visible = true
		end
		mainFrame.Size = originalSize
		minimizeButton.Text = "-"
	end
end)

-- Toggle button
toggleButton.MouseButton1Click:Connect(function()
	enabled = not enabled
	toggleButton.Text = "Backstab: " .. (enabled and "ON" or "OFF")
end)

-- Slider functionality (mobile + PC)
local draggingSlider = false
sliderButton.MouseButton1Down:Connect(function()
	draggingSlider = true
end)
UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		draggingSlider = false
	end
end)
RunService.RenderStepped:Connect(function()
	if draggingSlider then
		local mouseX = UserInputService:GetMouseLocation().X
		local relativeX = math.clamp(mouseX - sliderFrame.AbsolutePosition.X, 0, sliderFrame.AbsoluteSize.X)
		sliderButton.Position = UDim2.new(0, relativeX, 0, -5)
		range = math.floor(1 + (relativeX / sliderFrame.AbsoluteSize.X) * 9 + 0.5)
		rangeLabel.Text = "Range: " .. range
	end
end)

-- Tween helper
local function tweenBehind(hrp, targetHRP)
	local behindPos = targetHRP.Position - (targetHRP.CFrame.LookVector * 4.2)
	local distance = (hrp.Position - behindPos).Magnitude
	local time = distance / tweenSpeed
	local tween = TweenService:Create(hrp, TweenInfo.new(time, Enum.EasingStyle.Linear), { CFrame = CFrame.new(behindPos, behindPos + targetHRP.CFrame.LookVector) })
	tween:Play()
end

-- Main loop
RunService.Heartbeat:Connect(function()
	if not enabled or cooldown then return end

	local char = lp.Character
	if not (char and char:FindFirstChild("HumanoidRootPart")) then return end
	local hrp = char.HumanoidRootPart

	for _, name in ipairs(killerNames) do
		local killer = killersFolder:FindFirstChild(name)
		if killer and killer:FindFirstChild("HumanoidRootPart") then
			local kHRP = killer.HumanoidRootPart
			local distance = (hrp.Position - kHRP.Position).Magnitude

			if distance <= range and killer ~= lastTarget then
				lastTarget = killer
				cooldown = true

				-- Tween loop behind killer until dagger
				local connection
				connection = RunService.Heartbeat:Connect(function()
					if not (char and char.Parent and kHRP and kHRP.Parent) then
						if connection then connection:Disconnect() end
						return
					end
					tweenBehind(hrp, kHRP)
				end)

				-- Trigger dagger
				daggerRemote:FireServer("UseActorAbility", "Dagger")

				-- Stop after leaving range
				task.delay(2, function()
					while (hrp.Position - kHRP.Position).Magnitude <= range do
						RunService.Heartbeat:Wait()
					end
					lastTarget = nil
					cooldown = false
					if connection then connection:Disconnect() end
				end)

				break
			end
		end
	end
end)

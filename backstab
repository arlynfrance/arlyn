local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local lp = Players.LocalPlayer

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BackstabToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = lp:WaitForChild("PlayerGui")

-- Rounded corners function
local function addCorner(uiElement, radius)
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, radius)
	corner.Parent = uiElement
end

-- Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 150, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 20
toggleButton.Text = "Backstab: OFF"
toggleButton.Parent = screenGui
addCorner(toggleButton, 6)

-- Range Label
local rangeLabel = Instance.new("TextLabel")
rangeLabel.Size = UDim2.new(0, 150, 0, 20)
rangeLabel.Position = UDim2.new(0, 10, 0, 55)
rangeLabel.BackgroundTransparency = 1
rangeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeLabel.Font = Enum.Font.SourceSans
rangeLabel.TextSize = 16
rangeLabel.Text = "Range:"
rangeLabel.Parent = screenGui

-- TextBox for Range Input
local rangeBox = Instance.new("TextBox")
rangeBox.Size = UDim2.new(0, 150, 0, 25)
rangeBox.Position = UDim2.new(0, 10, 0, 75)
rangeBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
rangeBox.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeBox.Font = Enum.Font.SourceSans
rangeBox.TextSize = 16
rangeBox.PlaceholderText = "Enter range (1 - 10)"
rangeBox.Text = "4"
rangeBox.ClearTextOnFocus = false
rangeBox.Parent = screenGui
addCorner(rangeBox, 6)

-- Signature box (@mocksss)
local signatureBox = Instance.new("TextLabel")
signatureBox.Size = UDim2.new(0, 150, 0, 25)
signatureBox.Position = UDim2.new(0, 10, 0, 105)
signatureBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
signatureBox.TextColor3 = Color3.fromRGB(255, 255, 255)
signatureBox.Font = Enum.Font.SourceSans
signatureBox.TextSize = 16
signatureBox.Text = "@mocksss"
signatureBox.TextXAlignment = Enum.TextXAlignment.Center
signatureBox.Parent = screenGui
addCorner(signatureBox, 6)

-- Vars
local enabled = false
local cooldown = false
local lastTarget = nil
local range = 4
local daggerRemote = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")
local killerNames = { "Jason", "c00lkidd", "JohnDoe", "1x1x1x1", "Noli" }
local killersFolder = workspace:WaitForChild("Players"):WaitForChild("Killers")

-- Toggle button click
toggleButton.MouseButton1Click:Connect(function()
	enabled = not enabled
	toggleButton.Text = "Backstab: " .. (enabled and "ON" or "OFF")
	toggleButton.BackgroundColor3 = enabled and Color3.fromRGB(80, 84, 120) or Color3.fromRGB(30, 30, 30)
end)

-- Range box input
rangeBox.FocusLost:Connect(function()
	local input = tonumber(rangeBox.Text)
	if input and input >= 1 and input <= 10 then
		range = input
	else
		rangeBox.Text = tostring(range)
	end
end)

-- Always-around check
local function inRange(hrp, targetHRP)
	return (hrp.Position - targetHRP.Position).Magnitude <= range
end

-- Main loop
RunService.Heartbeat:Connect(function()
	if not enabled or cooldown then return end

	local char = lp.Character
	if not (char and char:FindFirstChild("HumanoidRootPart")) then return end
	local hrp = char.HumanoidRootPart

	for _, name in ipairs(killerNames) do
		local killer = killersFolder:FindFirstChild(name)
		if killer and killer:FindFirstChild("HumanoidRootPart") then
			local kHRP = killer.HumanoidRootPart

			if inRange(hrp, kHRP) and killer ~= lastTarget then
				cooldown = true
				lastTarget = killer

				-- Track behind killer for 1.25s
				local startTime = tick()
				local tracking = true

				local trackConn
				trackConn = RunService.Heartbeat:Connect(function()
					if not tracking or not (char and char.Parent and kHRP and kHRP.Parent) then
						if trackConn then trackConn:Disconnect() end
						return
					end

					local behindPos = kHRP.Position - (kHRP.CFrame.LookVector * 4)
					local tweenInfo = TweenInfo.new(0.05, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
					local tween = TweenService:Create(hrp, tweenInfo, {
						CFrame = CFrame.new(behindPos, behindPos + kHRP.CFrame.LookVector)
					})
					tween:Play()

					if tick() - startTime >= 1.25 then
						tracking = false
						-- Wait 0.2s then dagger
						task.delay(0.2, function()
							daggerRemote:FireServer("UseActorAbility", "Dagger")
						end)
					end
				end)

				-- Wait until killer is out of range, then reset cooldown after 30s
				task.delay(30, function()
					lastTarget = nil
					cooldown = false
				end)

				break
			end
		end
	end
end)

-- // Services
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")

local lp = Players.LocalPlayer

-- // Variables
local backstabEnabled = false
local espEnabled = false
local rangeValue = 7.2
local modeValue = "behind"
local guiVisible = true
local espLib

-- // GUI Creation
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BackstabHub"
screenGui.ResetOnSpawn = false
screenGui.Parent = lp:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 500, 0, 300)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local outline = Instance.new("UIStroke")
outline.Thickness = 2
outline.Color = Color3.fromRGB(80, 80, 80)
outline.Parent = mainFrame

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 25)
titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleText = Instance.new("TextLabel")
titleText.Size = UDim2.new(1, -10, 1, 0)
titleText.Position = UDim2.new(0, 5, 0, 0)
titleText.BackgroundTransparency = 1
titleText.Text = "MOCKS' BACKSTAB HUB V3"
titleText.TextColor3 = Color3.fromRGB(200, 200, 200)
titleText.Font = Enum.Font.Code
titleText.TextSize = 16
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.Parent = titleBar

-- Left Panel
local leftPanel = Instance.new("Frame")
leftPanel.Size = UDim2.new(0, 150, 1, -25)
leftPanel.Position = UDim2.new(0, 0, 0, 25)
leftPanel.BackgroundTransparency = 1
leftPanel.Parent = mainFrame

-- Backstab Toggle Button
local backstabBtn = Instance.new("TextButton")
backstabBtn.Size = UDim2.new(1, -10, 0, 30)
backstabBtn.Position = UDim2.new(0, 5, 0, 5)
backstabBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
backstabBtn.Text = "backstab: off"
backstabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
backstabBtn.Font = Enum.Font.Code
backstabBtn.TextSize = 14
backstabBtn.Parent = leftPanel

-- Range Slider
local rangeLabel = Instance.new("TextLabel")
rangeLabel.Size = UDim2.new(1, -10, 0, 20)
rangeLabel.Position = UDim2.new(0, 5, 0, 40)
rangeLabel.BackgroundTransparency = 1
rangeLabel.Text = "range: " .. tostring(rangeValue)
rangeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeLabel.Font = Enum.Font.Code
rangeLabel.TextSize = 14
rangeLabel.Parent = leftPanel

local rangeSlider = Instance.new("TextButton")
rangeSlider.Size = UDim2.new(1, -10, 0, 20)
rangeSlider.Position = UDim2.new(0, 5, 0, 60)
rangeSlider.BackgroundColor3 = Color3.fromRGB(100, 100, 140)
rangeSlider.Text = ""
rangeSlider.AutoButtonColor = false
rangeSlider.Parent = leftPanel

-- Mode Button
local modeBtn = Instance.new("TextButton")
modeBtn.Size = UDim2.new(1, -10, 0, 30)
modeBtn.Position = UDim2.new(0, 5, 0, 90)
modeBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
modeBtn.Text = "mode: behind"
modeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
modeBtn.Font = Enum.Font.Code
modeBtn.TextSize = 14
modeBtn.Parent = leftPanel

-- ESP Toggle Button
local espBtn = Instance.new("TextButton")
espBtn.Size = UDim2.new(1, -10, 0, 30)
espBtn.Position = UDim2.new(0, 5, 0, 130)
espBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
espBtn.Text = "esp: off"
espBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
espBtn.Font = Enum.Font.Code
espBtn.TextSize = 14
espBtn.Parent = leftPanel

-- // Draggable Function
local function makeDraggable(gui)
    local dragging, dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        gui.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end

    gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    gui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UIS.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

makeDraggable(mainFrame)

-- // Button Logic
backstabBtn.MouseButton1Click:Connect(function()
    backstabEnabled = not backstabEnabled
    backstabBtn.Text = "backstab: " .. (backstabEnabled and "on" or "off")
    backstabBtn.BackgroundColor3 = backstabEnabled and Color3.fromRGB(150, 150, 200) or Color3.fromRGB(80, 80, 100)
end)

modeBtn.MouseButton1Click:Connect(function()
    modeValue = (modeValue == "behind" and "front" or "behind")
    modeBtn.Text = "mode: " .. modeValue
end)

espBtn.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espBtn.Text = "esp: " .. (espEnabled and "on" or "off")
    espBtn.BackgroundColor3 = espEnabled and Color3.fromRGB(150, 150, 200) or Color3.fromRGB(80, 80, 100)

    if espEnabled and not espLib then
        espLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Exunys/Exunys-ESP/main/src/ESP.lua"))()
        espLib:Toggle(true)
    elseif espLib then
        espLib:Toggle(espEnabled)
    end
end)

-- // RightShift Toggle
UIS.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Enum.KeyCode.RightShift then
        guiVisible = not guiVisible
        mainFrame.Visible = guiVisible
    end
end)

-- // Backstab Loop (Quad Tween)
RS.Heartbeat:Connect(function()
    if backstabEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= lp and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local dist = (lp.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if dist <= rangeValue then
                    local targetPos
                    if modeValue == "behind" then
                        targetPos = player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                    else
                        targetPos = player.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -2)
                    end

                    TweenService:Create(lp.Character.HumanoidRootPart, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
                        CFrame = targetPos
                    }):Play()
                end
            end
        end
    end
end)

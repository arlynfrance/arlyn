--// Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

--// Player setup
local lp = Players.LocalPlayer
local char = lp.Character or lp.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")

--// Settings
local tweenTime = 0.35
local behindDistance = 3.8
local cooldownTime = 30
local detectionRange = 20

local canTween = true
local killer = nil

--// GUI Setup
local playerGui = lp:WaitForChild("PlayerGui")

local existingGui = playerGui:FindFirstChild("BackstabToggleGui")
if existingGui then
	existingGui:Destroy()
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BackstabToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 150, 0, 25)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(89, 44, 47)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSans
toggleButton.TextSize = 16
toggleButton.Text = "Auto Backstab: OFF"
toggleButton.Parent = screenGui

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 6)
toggleCorner.Parent = toggleButton

-- Range Box
local rangeBox = Instance.new("TextBox")
rangeBox.Size = UDim2.new(0, 150, 0, 25)
rangeBox.Position = UDim2.new(0, 10, 0, 45)
rangeBox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
rangeBox.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeBox.Font = Enum.Font.SourceSans
rangeBox.TextSize = 16
rangeBox.Text = tostring(detectionRange)
rangeBox.Parent = screenGui

local rangeCorner = Instance.new("UICorner")
rangeCorner.CornerRadius = UDim.new(0, 6)
rangeCorner.Parent = rangeBox

-- @mocksss Label
local mockLabel = Instance.new("TextLabel")
mockLabel.Size = UDim2.new(0, 150, 0, 25)
mockLabel.Position = UDim2.new(0, 10, 0, 75)
mockLabel.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
mockLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
mockLabel.Font = Enum.Font.SourceSans
mockLabel.TextSize = 16
mockLabel.Text = "@mocksss"
mockLabel.Parent = screenGui

local mockCorner = Instance.new("UICorner")
mockCorner.CornerRadius = UDim.new(0, 6)
mockCorner.Parent = mockLabel

--// Toggle Logic
local enabled = false
toggleButton.MouseButton1Click:Connect(function()
	enabled = not enabled
	if enabled then
		toggleButton.BackgroundColor3 = Color3.fromRGB(89, 44, 47)
		toggleButton.Text = "Auto Backstab: ON"
	else
		toggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
		toggleButton.Text = "Auto Backstab: OFF"
	end
end)

--// Range Box Logic
rangeBox.FocusLost:Connect(function(enterPressed)
	if tonumber(rangeBox.Text) then
		detectionRange = tonumber(rangeBox.Text)
	end
end)

--// Detect Killer
local function findKiller()
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= lp and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
			return plr
		end
	end
	return nil
end

--// Tween Behind Killer
local function tweenBehindKiller(killerHRP)
	if not canTween then return end
	canTween = false

	local killerLook = killerHRP.CFrame.LookVector
	local behindPos = killerHRP.Position - killerLook * behindDistance
	local targetCFrame = CFrame.new(behindPos) * CFrame.Angles(0, math.atan2(killerLook.X, killerLook.Z), 0)

	local tween = TweenService:Create(hrp, TweenInfo.new(tweenTime, Enum.EasingStyle.Linear), {
		CFrame = targetCFrame
	})

	tween:Play()
	tween.Completed:Connect(function()
		-- Instant dagger fire
		ReplicatedStorage.Events.Dagger:FireServer()
		task.delay(cooldownTime, function()
			canTween = true
		end)
	end)
end

--// Main Loop
task.spawn(function()
	while task.wait(0.1) do
		if enabled then
			killer = findKiller()
			if killer and killer.Character and killer.Character:FindFirstChild("HumanoidRootPart") then
				local dist = (killer.Character.HumanoidRootPart.Position - hrp.Position).Magnitude
				if dist <= detectionRange then
					tweenBehindKiller(killer.Character.HumanoidRootPart)
				end
			end
		end
	end
end)

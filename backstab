--// Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local lp = Players.LocalPlayer
local uis = game:GetService("UserInputService")

--// Vars
local range = 4
local backstabEnabled = false
local cooldown = false
local lastTarget = nil
local mode = "Behind"
local daggerRemote = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")
local killerNames = { "Jason", "c00lkidd", "JohnDoe", "1x1x1x1", "Noli" }
local killersFolder = workspace:WaitForChild("Players"):WaitForChild("Killers")

local espEnabled = false
local espObjects = {}
local espRange = 50

--// GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = lp:WaitForChild("PlayerGui")

-- Backstab Toggle Button
local backstabButton = Instance.new("TextButton")
backstabButton.Size = UDim2.new(0, 150, 0, 40)
backstabButton.Position = UDim2.new(0, 10, 0, 10)
backstabButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
backstabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
backstabButton.Font = Enum.Font.SourceSansBold
backstabButton.TextSize = 20
backstabButton.Text = "Backstab: OFF"
backstabButton.Parent = screenGui

backstabButton.MouseButton1Click:Connect(function()
	backstabEnabled = not backstabEnabled
	backstabButton.Text = "Backstab: " .. (backstabEnabled and "ON" or "OFF")
	backstabButton.BackgroundColor3 = backstabEnabled and Color3.fromRGB(50, 150, 50) or Color3.fromRGB(30, 30, 30)
end)

-- ESP Toggle Button
local espButton = Instance.new("TextButton")
espButton.Size = UDim2.new(0, 150, 0, 40)
espButton.Position = UDim2.new(0, 10, 0, 55)
espButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
espButton.TextColor3 = Color3.fromRGB(255, 255, 255)
espButton.Font = Enum.Font.SourceSansBold
espButton.TextSize = 20
espButton.Text = "ESP: OFF"
espButton.Parent = screenGui

espButton.MouseButton1Click:Connect(function()
	espEnabled = not espEnabled
	espButton.Text = "ESP: " .. (espEnabled and "ON" or "OFF")
	espButton.BackgroundColor3 = espEnabled and Color3.fromRGB(50, 150, 50) or Color3.fromRGB(30, 30, 30)
	if not espEnabled then
		for _, obj in ipairs(espObjects) do
			if obj and obj.Parent then obj:Destroy() end
		end
		table.clear(espObjects)
	end
end)

-- Mode Button
local modeButton = Instance.new("TextButton")
modeButton.Size = UDim2.new(0, 150, 0, 25)
modeButton.Position = UDim2.new(0, 10, 0, 100)
modeButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
modeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
modeButton.Font = Enum.Font.SourceSans
modeButton.TextSize = 16
modeButton.Text = "Mode: Behind"
modeButton.Parent = screenGui

modeButton.MouseButton1Click:Connect(function()
	mode = (mode == "Behind") and "Around" or "Behind"
	modeButton.Text = "Mode: " .. mode
end)

-- Range Slider
local sliderBack = Instance.new("Frame", screenGui)
sliderBack.Size = UDim2.new(0, 240, 0, 14)
sliderBack.Position = UDim2.new(0, 10, 0, 135)
sliderBack.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
sliderBack.BorderSizePixel = 0
local sliderCorner = Instance.new("UICorner", sliderBack)
sliderCorner.CornerRadius = UDim.new(0, 6)

local sliderFill = Instance.new("Frame", sliderBack)
sliderFill.Size = UDim2.new((range - 1) / 9, 0, 1, 0)
sliderFill.BackgroundColor3 = Color3.fromRGB(150, 0, 255)
local fillCorner = Instance.new("UICorner", sliderFill)
fillCorner.CornerRadius = UDim.new(0, 6)

local knob = Instance.new("ImageButton", sliderBack)
knob.Size = UDim2.new(0, 20, 0, 20)
knob.AnchorPoint = Vector2.new(0.5, 0.5)
knob.Position = UDim2.new((range - 1) / 9, 0, 0.5, 0)
knob.BackgroundColor3 = Color3.fromRGB(150, 0, 255)
knob.AutoButtonColor = false
local knobCorner = Instance.new("UICorner", knob)
knobCorner.CornerRadius = UDim.new(0, 10)

local function updateSlider(val)
	range = math.clamp(val, 1, 10)
	sliderFill.Size = UDim2.new((range - 1) / 9, 0, 1, 0)
	knob.Position = UDim2.new((range - 1) / 9, 0, 0.5, 0)
end

knob.MouseButton1Down:Connect(function()
	local moveConn, releaseConn
	moveConn = uis.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			local rel = math.clamp((input.Position.X - sliderBack.AbsolutePosition.X) / sliderBack.AbsoluteSize.X, 0, 1)
			updateSlider(math.floor(rel * 9) + 1)
		end
	end)
	releaseConn = uis.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			moveConn:Disconnect()
			releaseConn:Disconnect()
		end
	end)
end)

-- Backstab Helper
local function isBehindTarget(hrp, targetHRP)
	local distance = (hrp.Position - targetHRP.Position).Magnitude
	if distance > range then return false end
	if mode == "Around" then return true end
	local direction = -targetHRP.CFrame.LookVector
	local toPlayer = (hrp.Position - targetHRP.Position)
	return toPlayer:Dot(direction) > 0.5
end

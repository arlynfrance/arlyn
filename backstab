-- Services
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local lp = Players.LocalPlayer
local killersFolder = workspace:WaitForChild("Killers") -- adjust if needed
local daggerRemote = game.ReplicatedStorage:WaitForChild("DaggerRemote") -- adjust if needed

-- Constants
local BACKSTAB_DISTANCE = 4.3
local DAGGER_DELAY = 0.5
local STOP_DELAY = 0.15
local killerNames = {"Killer1", "Killer2"} -- replace with actual killer names

-- State
local enabled = false
local cooldown = false
local lastTarget = nil

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "BackstabUI"
ScreenGui.Parent = lp:WaitForChild("PlayerGui")

local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Size = UDim2.new(0, 120, 0, 40)
ToggleButton.Position = UDim2.new(0, 20, 0, 20)
ToggleButton.Text = "Backstab: OFF"
ToggleButton.BackgroundColor3 = Color3.fromRGB(128, 128, 128) -- initial gray color
ToggleButton.TextColor3 = Color3.new(1,1,1)
ToggleButton.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 5)
UICorner.Parent = ToggleButton

ToggleButton.MouseButton1Click:Connect(function()
	enabled = not enabled
	if enabled then
		ToggleButton.BackgroundColor3 = Color3.fromRGB(245, 93, 66)
		ToggleButton.Text = "Backstab: ON"
	else
		ToggleButton.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
		ToggleButton.Text = "Backstab: OFF"
	end
end)

-- Helper function to check if player is behind target
local function isBehindTarget(hrp, targetHRP)
	local relative = targetHRP.CFrame:PointToObjectSpace(hrp.Position)
	return relative.Z < 0 -- behind if Z is negative in target space
end

-- Main logic
RunService.Heartbeat:Connect(function()
	if not enabled or cooldown then return end

	local char = lp.Character
	if not (char and char:FindFirstChild("HumanoidRootPart")) then return end
	local hrp = char.HumanoidRootPart

	for _, name in ipairs(killerNames) do
		local killer = killersFolder:FindFirstChild(name)
		if killer and killer:FindFirstChild("HumanoidRootPart") then
			local kHRP = killer.HumanoidRootPart

			if isBehindTarget(hrp, kHRP) and killer ~= lastTarget then
				cooldown = true
				lastTarget = killer

				local daggerUsed = false
				local alignConnection

				-- Keep following the killer behind at 4.3 studs
				alignConnection = RunService.Heartbeat:Connect(function()
					if not (char and char.Parent and kHRP and kHRP.Parent) then
						if alignConnection then alignConnection:Disconnect() end
						return
					end

					local targetPos = kHRP.Position - (kHRP.CFrame.LookVector * BACKSTAB_DISTANCE)
					local targetCFrame = CFrame.new(targetPos, targetPos + kHRP.CFrame.LookVector)

					-- Tween smoothly to the position over 0.35 seconds
					local tweenInfo = TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
					local tween = TweenService:Create(hrp, tweenInfo, {CFrame = targetCFrame})
					tween:Play()
				end)

				-- Fire dagger 0.5 seconds after starting
				task.delay(DAGGER_DELAY, function()
					if not daggerUsed then
						daggerUsed = true
						daggerRemote:FireServer("UseActorAbility", "Dagger")

						-- Stop following shortly after dagger fires
						task.delay(STOP_DELAY, function()
							if alignConnection then
								alignConnection:Disconnect()
							end
							lastTarget = nil
							cooldown = false
						end)
					end
				end)

				break
			end
		end
	end
end)

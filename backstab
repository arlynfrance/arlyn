-- MOCKS' BACKSTAB SCRIPT with embedded Exunys ESP.lua
-- ----------------------------------------------
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local camera = workspace.CurrentCamera

local lp = Players.LocalPlayer
local daggerRemote
pcall(function()
    daggerRemote = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")
end)

-- Backstab toggles
local enabled, cooldown, lastTarget = false, false, nil
local range, mode = 4.0, "behind"
local killerNames = { "Jason", "c00lkidd", "JohnDoe", "1x1x1x1", "Noli" }
local killerSet = { Jason=true, c00lkidd=true, JohnDoe=true, ["1x1x1x1"]=true, Noli=true }

-- GUI setup (your layout)
local BG, PANEL, ACCENT = Color3.fromRGB(37,40,45), Color3.fromRGB(42,45,50), Color3.fromRGB(56,63,76)
local BTN_OFF, BTN_ON = Color3.fromRGB(95,95,100), Color3.fromRGB(120,120,140)
local TITLE = Color3.fromRGB(200,200,200)
local MAIN_W, MAIN_H, MAIN_X, MAIN_Y, OFF_Y = 540,300,10,10,-350

local screenGui = Instance.new("ScreenGui", lp:WaitForChild("PlayerGui"))
local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0,MAIN_W,0,MAIN_H)
mainFrame.Position = UDim2.new(0,MAIN_X,0,OFF_Y)
mainFrame.BackgroundColor3 = BG
mainFrame.Active, mainFrame.Draggable, mainFrame.Visible = true, true, false
Instance.new("UIStroke", mainFrame).Color = ACCENT
local titleBar = Instance.new("Frame", mainFrame)
titleBar.Size = UDim2.new(1,0,0,28)
titleBar.BackgroundColor3 = Color3.fromRGB(60,60,67)
local titleText = Instance.new("TextLabel", titleBar)
titleText.Size = UDim2.new(1,-12,1,0); titleText.Position = UDim2.new(0,6,0,0)
titleText.BackgroundTransparency = 1; titleText.Text = "MOCKS'  BACKSTAB  SCRIPT"
titleText.Font, titleText.TextSize, titleText.TextColor3 = Enum.Font.Code, 14, TITLE
titleText.TextXAlignment = Enum.TextXAlignment.Left
local topDivider = Instance.new("Frame", mainFrame)
topDivider.Size = UDim2.new(1,-12,0,6); topDivider.Position = UDim2.new(0,6,0,28)
topDivider.BackgroundColor3 = ACCENT
local leftPanel = Instance.new("Frame", mainFrame)
leftPanel.Size = UDim2.new(0,170,1,-40); leftPanel.Position = UDim2.new(0,6,0,36)
leftPanel.BackgroundColor3 = PANEL
local rightPanel = Instance.new("Frame", mainFrame)
rightPanel.Size = UDim2.new(0,358,1,-40); rightPanel.Position = UDim2.new(0,192,0,36)
rightPanel.BackgroundColor3 = PANEL

local function mkBtn(parent,pos,text)
    local b = Instance.new("TextButton", parent)
    b.Size = UDim2.new(0,120,0,28); b.Position = pos
    b.BackgroundColor3 = BTN_OFF; b.BorderSizePixel = 0
    b.Font, b.TextSize, b.TextColor3 = Enum.Font.Code, 14, Color3.fromRGB(20,20,20)
    b.Text = text; b.AutoButtonColor = false
    return b
end

-- left side controls
local backBtn = mkBtn(leftPanel, UDim2.new(0,8,0,8), "backstab: off")
local rangeLb = Instance.new("TextLabel", leftPanel)
rangeLb.Size = UDim2.new(0,150,0,18); rangeLb.Position = UDim2.new(0,8,0,42)
rangeLb.BackgroundTransparency, rangeLb.Font, rangeLb.TextSize = 1, Enum.Font.Code, 14
rangeLb.TextColor3 = TITLE; rangeLb.TextXAlignment = Enum.TextXAlignment.Left
rangeLb.Text = string.format("range: %.1f",range)
local sliderBg = Instance.new("Frame", leftPanel)
sliderBg.Size = UDim2.new(0,150,0,12); sliderBg.Position = UDim2.new(0,8,0,64)
sliderBg.BackgroundColor3 = Color3.fromRGB(60,60,65); sliderBg.BorderSizePixel = 0
local sliderFill = Instance.new("Frame", sliderBg)
sliderFill.Size = UDim2.new((range-1)/9,0,1,0); sliderFill.BackgroundColor3 = Color3.fromRGB(110,110,120)
local sliderKnob = Instance.new("TextButton", sliderBg)
sliderKnob.Size = UDim2.new(0,12,0,12); sliderKnob.BackgroundColor3 = Color3.fromRGB(30,30,30); sliderKnob.AutoButtonColor = false; sliderKnob.Text = ""
local modeBtn = mkBtn(leftPanel, UDim2.new(0,150,0,24), UDim2.new(0,8,0,92), "mode:behind")

-- right side: one ESP toggle where old buttons were
local espBtn = mkBtn(rightPanel, UDim2.new(0,8,0,8), "esp: off")
espBtn.BackgroundColor3 = BTN_OFF

local function updateBtn(b, on)
    b.BackgroundColor3 = on and BTN_ON or BTN_OFF
end

-- GUI open/close with RightShift
local guiVis = false
local function slideIn() mainFrame.Visible = true TweenService:Create(mainFrame, TweenInfo.new(0.38,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Position=UDim2.new(0,MAIN_X,0,MAIN_Y)}):Play() end
local function slideOut() local t = TweenService:Create(mainFrame, TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.In),{Position=UDim2.new(0,MAIN_X,0,OFF_Y)}) t:Play() t.Completed:Connect(function() if not guiVis then mainFrame.Visible=false end end) end
UserInputService.InputBegan:Connect(function(i,p) if p then return end if i.KeyCode == Enum.KeyCode.RightShift then guiVis = not guiVis if guiVis then slideIn() else slideOut() end end end)

-- slider control
local dragging
sliderKnob.MouseButton1Down:Connect(function() dragging = true end)
UserInputService.InputChanged:Connect(function(i) if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then
    local a = sliderBg.AbsolutePosition.X
    local s = sliderBg.AbsoluteSize.X
    local x = math.clamp(i.Position.X - a,0,s)
    local pct = s>0 and (x/s) or 0
    sliderFill.Size = UDim2.new(pct,0,1,0)
    sliderKnob.Position = UDim2.new(pct,-6,0,0)
    range = 1 + pct*9
    rangeLb.Text = string.format("range: %.1f",range)
end end)
UserInputService.InputEnded:Connect(function(i) if i.UserInputType == Enum.UserInputType.MouseButton1 then dragging=false end end)

backBtn.MouseButton1Click:Connect(function()
    enabled = not enabled
    backBtn.Text = "backstab: " .. (enabled and "on" or "off")
    updateBtn(backBtn, enabled)
end)

modeBtn.MouseButton1Click:Connect(function()
    mode = (mode == "behind" and "around") or "behind"
    modeBtn.Text = "mode:"..mode
end)

-- Function to load Exunys ESP.lua code
local function execExunys()
    -- paste full contents of ESP.lua here (you already fetched it)
    -- example:
    local code = [[
        --<<< entire content of ESP.lua (2000+ lines) >>>
    ]]
    local f = assert(loadstring(code))
    return f()
end

local exComm = nil
espBtn.MouseButton1Click:Connect(function()
    if not ESP_LOADED and not exComm then
        espBtn.Text = "esp: loading"
        updateBtn(espBtn,true)
        local ok, ret = pcall(execExunys)
        if ok then
            ESP_LOADED = true
            exComm = ret or (getgenv and getgenv().ExunysDeveloperESP)
            espBtn.Text = "esp: on"
            updateBtn(espBtn,true)
        else
            ESP_LOADED = false
            espBtn.Text = "esp: off"
            updateBtn(espBtn,false)
            warn("Failed to load Exunys ESP:", ret)
        end
    else
        -- unload via Exit()
        if exComm and type(exComm.Exit) == "function" then
            pcall(exComm.Exit, exComm)
        end
        ESP_LOADED = false
        exComm = nil
        getgenv().ExunysDeveloperESP = nil
        espBtn.Text = "esp: off"
        updateBtn(espBtn,false)
    end
end)

-- isBehindTarget and tween logic (unchanged)
local function tweenBehindAndStab(thrp,dur)
    if not (lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")) then return end
    local hrp = lp.Character.HumanoidRootPart
    if not (thrp and thrp.Parent) then return end
    local behindOffset = 0.6
    local behindPos = thrp.Position - (thrp.CFrame.LookVector * behindOffset)
    local targetCFrame = CFrame.new(behindPos,behindPos+thrp.CFrame.LookVector)
    local ok, tween = pcall(function()
        return TweenService:Create(hrp, TweenInfo.new(dur,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{CFrame=targetCFrame})
    end)
    if not ok or not tween then
        pcall(function()
            hrp.CFrame = targetCFrame
            if daggerRemote then daggerRemote:FireServer("UseActorAbility","Dagger") end
        end)
        return
    end
    tween:Play()
    local conn
    conn = tween.Completed:Connect(function()
        if conn then conn:Disconnect() end
        if hrp and hrp.Parent then
            hrp.CFrame = CFrame.new(hrp.Position, hrp.Position + thrp.CFrame.LookVector)
        end
        if daggerRemote then daggerRemote:FireServer("UseActorAbility","Dagger") end
    end)
    task.delay(dur+0.1,function()
        if conn and conn.Connected then conn:Disconnect() end
    end)
end

function isBehindTarget(hrp,target)
    if (hrp.Position - target.Position).Magnitude > range then return false end
    if mode == "around" then return true end
    local direction = -target.CFrame.LookVector
    return direction:Dot(hrp.Position-target.Position) > 0.5
end

RunService.RenderStepped:Connect(function()
    local char = lp.Character
    if not (char and char:FindFirstChild("HumanoidRootPart")) then return end
    local hrp = char.HumanoidRootPart
    local killers = {}
    local kf = workspace:FindFirstChild("Players") and workspace.Players:FindFirstChild("Killers")
    if kf then
        for _,n in ipairs(killerNames) do
            local k = kf:FindFirstChild(n)
            if k and k:FindFirstChild("HumanoidRootPart") then table.insert(killers,k) end
        end
    end
    if #killers==0 then
        for _,pl in ipairs(Players:GetPlayers()) do
            if pl~=lp and pl.Character and pl.Character:FindFirstChild("HumanoidRootPart") then
                table.insert(killers,pl.Character)
            end
        end
    end
    for _,kobj in ipairs(killers) do
        local thrp = kobj:FindFirstChild("HumanoidRootPart")
        if thrp and enabled and not cooldown and isBehindTarget(hrp,thrp) and kobj~=lastTarget then
            cooldown=true; lastTarget=kobj
            tweenBehindAndStab(thrp,0.20)
            task.delay(2,function()
                RunService.Heartbeat:Wait()
                while isBehindTarget(hrp,thrp) do RunService.Heartbeat:Wait() end
                lastTarget=nil; cooldown=false
            end)
            break
        end
    end
end)
